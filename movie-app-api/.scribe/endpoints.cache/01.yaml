## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Movie Operations.'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/movie
    metadata:
      groupName: 'Movie Operations.'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all movies.'
      description: 'Retrieve all movies'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","data":{"current_page":1,"data":[{"id":3,"title":"Superman","cover_image":null,"author":"Cyrus Voris, Ethan Reiff","imdb_rating":0},{"id":4,"title":"Kung Fu Panda","cover_image":null,"author":"Cyrus Voris, Ethan Reiff","imdb_rating":0},{"id":5,"title":"Kung Fu Panda","cover_image":null,"author":"Cyrus Voris, Ethan Reiff","imdb_rating":0},{"id":6,"title":"Kung Fu Panda","cover_image":null,"author":"Cyrus Voris, Ethan Reiff","imdb_rating":0},{"id":7,"title":"John","cover_image":null,"author":"Cyrus Voris, Ethan Reiff","imdb_rating":0}],"first_page_url":"http:\/\/127.0.0.1:8000\/api\/v1\/movie?page=1","from":1,"last_page":6,"last_page_url":"http:\/\/127.0.0.1:8000\/api\/v1\/movie?page=6","links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/127.0.0.1:8000\/api\/v1\/movie?page=1","label":"1","active":true},{"url":"http:\/\/127.0.0.1:8000\/api\/v1\/movie?page=2","label":"2","active":false},{"url":"http:\/\/127.0.0.1:8000\/api\/v1\/movie?page=3","label":"3","active":false},{"url":"http:\/\/127.0.0.1:8000\/api\/v1\/movie?page=4","label":"4","active":false},{"url":"http:\/\/127.0.0.1:8000\/api\/v1\/movie?page=5","label":"5","active":false},{"url":"http:\/\/127.0.0.1:8000\/api\/v1\/movie?page=6","label":"6","active":false},{"url":"http:\/\/127.0.0.1:8000\/api\/v1\/movie?page=2","label":"Next &raquo;","active":false}],"next_page_url":"http:\/\/127.0.0.1:8000\/api\/v1\/movie?page=2","path":"http:\/\/127.0.0.1:8000\/api\/v1\/movie","per_page":5,"prev_page_url":null,"to":5,"total":29}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '59'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/movie/{id}'
    metadata:
      groupName: 'Movie Operations.'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show movie details.'
      description: 'you can look the detail information about movies'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the movie.'
        required: true
        example: 3
        type: integer
        custom: []
    cleanUrlParameters:
      id: 3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":true,"data":{"id":3,"user_id":2,"title":"Superman","summary":"Po might just be the laziest, clumsiest panda in the Valley of Peace, but he secretly dreams of becoming a kung fu legend. When the villainous snow leopard Tai Lung","cover_image":null,"genres":"Action, Commic","author":"Cyrus Voris, Ethan Reiff","tags":"","imdb_rating":0,"pdf_download_link":null,"related_movies":"{}","created_at":"2023-06-17T19:46:10.000000Z","updated_at":"2023-06-17T21:14:15.000000Z","deleted_at":null,"comment":[{"id":5,"movie_id":3,"user_email":"test1@gmail.com","comment":"This movie is really good","created_at":"2023-06-18T08:02:40.000000Z","updated_at":"2023-06-18T08:02:40.000000Z","deleted_at":null},{"id":14,"movie_id":3,"user_email":"ronny.jones@example.org","comment":"Vero similique ipsum voluptatem qui quo.","created_at":"2023-06-18T16:11:09.000000Z","updated_at":"2023-06-18T16:11:09.000000Z","deleted_at":null}],"relatedMovies":{"1":{"id":4,"user_id":2,"title":"Kung Fu Panda","summary":"Po might just be the laziest, clumsiest panda in the Valley of Peace, but he secretly dreams of becoming a kung fu legend. When the villainous snow leopard Tai Lung","cover_image":null,"genres":"Action, Comedy","author":"Cyrus Voris, Ethan Reiff","tags":"","imdb_rating":0,"pdf_download_link":null,"related_movies":"{}","created_at":"2023-06-17T19:47:18.000000Z","updated_at":"2023-06-17T19:47:18.000000Z","deleted_at":null},"2":{"id":5,"user_id":2,"title":"Kung Fu Panda","summary":"Po might just be the laziest, clumsiest panda in the Valley of Peace, but he secretly dreams of becoming a kung fu legend. When the villainous snow leopard Tai Lung","cover_image":null,"genres":"Action, Comedy","author":"Cyrus Voris, Ethan Reiff","tags":"","imdb_rating":0,"pdf_download_link":null,"related_movies":"{}","created_at":"2023-06-17T19:48:03.000000Z","updated_at":"2023-06-17T19:48:03.000000Z","deleted_at":null},"3":{"id":6,"user_id":2,"title":"Kung Fu Panda","summary":"Po might just be the laziest, clumsiest panda in the Valley of Peace, but he secretly dreams of becoming a kung fu legend. When the villainous snow leopard Tai Lung","cover_image":null,"genres":"Action, Comedy","author":"Cyrus Voris, Ethan Reiff","tags":"","imdb_rating":0,"pdf_download_link":null,"related_movies":"{}","created_at":"2023-06-17T19:50:29.000000Z","updated_at":"2023-06-17T19:50:29.000000Z","deleted_at":null},"4":{"id":7,"user_id":2,"title":"John","summary":"Po might just be the laziest, clumsiest panda in the Valley of Peace, but he secretly dreams of becoming a kung fu legend. When the villainous snow leopard Tai Lung","cover_image":null,"genres":"Action, Comedy Updated","author":"Cyrus Voris, Ethan Reiff","tags":"","imdb_rating":0,"pdf_download_link":null,"related_movies":"{}","created_at":"2023-06-17T19:53:02.000000Z","updated_at":"2023-06-17T20:52:15.000000Z","deleted_at":null},"5":{"id":10,"user_id":1,"title":"Big Bang Theory","summary":"This is big bang theory","cover_image":"\/tmp\/phptC8pU2","genres":"Tragedy","author":"Justin","tags":"popular","imdb_rating":0,"pdf_download_link":null,"related_movies":"{}","created_at":"2023-06-18T09:29:46.000000Z","updated_at":"2023-06-18T09:29:46.000000Z","deleted_at":null},"6":{"id":11,"user_id":1,"title":"Big Bang Theory","summary":"This is big bang theory","cover_image":"\/tmp\/phpBTA825","genres":"Tragedy","author":"Justin","tags":"popular","imdb_rating":0,"pdf_download_link":null,"related_movies":"{}","created_at":"2023-06-18T09:30:07.000000Z","updated_at":"2023-06-18T09:30:07.000000Z","deleted_at":null},"7":{"id":14,"user_id":2,"title":"Big Bang Theory","summary":"This is big bang theory","cover_image":"image\/DlSReit5NksAMTjXVvY14N64dCCFEC8111NvaN8m.jpg","genres":"Tragedy","author":"Justin","tags":"popular","imdb_rating":0,"pdf_download_link":null,"related_movies":"{}","created_at":"2023-06-18T09:35:52.000000Z","updated_at":"2023-06-18T09:35:52.000000Z","deleted_at":null}}},"message":"retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '58'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/movie
    metadata:
      groupName: 'Movie Operations.'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Creating Movies.'
      description: '!Just login user can create movies'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: 'The id of the user.'
        required: true
        example: 9
        type: integer
        custom: []
      title:
        name: title
        description: 'The title of the movie.'
        required: true
        example: 'KungFu Panda'
        type: string
        custom: []
      summary:
        name: summary
        description: 'The summary of the movie.'
        required: true
        example: 'This is summary of KungFu Panda'
        type: string
        custom: []
      genres:
        name: genres
        description: 'The genres of the movie.'
        required: true
        example: Action
        type: string
        custom: []
      author:
        name: author
        description: 'The author of the movie.'
        required: true
        example: Person
        type: string
        custom: []
      cover_image:
        name: cover_image
        description: 'The cover images of movie.'
        required: false
        example: null
        type: file
        custom: []
      tags:
        name: tags
        description: 'The tags of the movie.'
        required: false
        example: popular
        type: string
        custom: []
      imdb_rating:
        name: imdb_rating
        description: 'The IMDB rating of the movie.'
        required: false
        example: 3
        type: integer
        custom: []
      pdf_download_link:
        name: pdf_download_link
        description: 'The pdf download link of the movie.'
        required: false
        example: popular
        type: STRING
        custom: []
    cleanBodyParameters:
      user_id: 9
      title: 'KungFu Panda'
      summary: 'This is summary of KungFu Panda'
      genres: Action
      author: Person
      tags: popular
      imdb_rating: 3
      pdf_download_link: popular
    fileParameters:
      cover_image: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Pchb6E1DaV4evZ6g85dak3f'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/movie/{id}'
    metadata:
      groupName: 'Movie Operations.'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Edit movies.'
      description: '!to edit movies you have to login.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the movie.'
        required: true
        example: 3
        type: integer
        custom: []
    cleanUrlParameters:
      id: 3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the movie.'
        required: true
        example: 'KungFu Panda'
        type: string
        custom: []
      summary:
        name: summary
        description: 'The summary of the movie.'
        required: true
        example: 'This is summary of KungFu Panda'
        type: string
        custom: []
      genres:
        name: genres
        description: 'The genres of the movie.'
        required: true
        example: Action
        type: string
        custom: []
      author:
        name: author
        description: 'The author of the movie.'
        required: true
        example: Person
        type: string
        custom: []
      user_id:
        name: user_id
        description: 'The id of the user.'
        required: true
        example: 9
        type: integer
        custom: []
      cover_image:
        name: cover_image
        description: 'The cover images of movie.'
        required: false
        example: null
        type: file
        custom: []
      tags:
        name: tags
        description: 'The tags of the movie.'
        required: false
        example: popular
        type: string
        custom: []
      imdb_rating:
        name: imdb_rating
        description: 'The IMDB rating of the movie.'
        required: false
        example: 3
        type: integer
        custom: []
      pdf_download_link:
        name: pdf_download_link
        description: 'The pdf download link of the movie.'
        required: false
        example: popular
        type: STRING
        custom: []
    cleanBodyParameters:
      title: 'KungFu Panda'
      summary: 'This is summary of KungFu Panda'
      genres: Action
      author: Person
      user_id: 9
      tags: popular
      imdb_rating: 3
      pdf_download_link: popular
    fileParameters:
      cover_image: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3Pg8b1Vafad6eEc4vZk5h6D'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/movie/{movie}'
    metadata:
      groupName: 'Movie Operations.'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete movies.'
      description: '!to delete movies you have to login.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie:
        name: movie
        description: 'The movie.'
        required: true
        example: 3
        type: integer
        custom: []
    cleanUrlParameters:
      movie: 3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer kd3ea1vP8EcfDh5bV6aZ46g'
    controller: null
    method: null
    route: null
    custom: []
