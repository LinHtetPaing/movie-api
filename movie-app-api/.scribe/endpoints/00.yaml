name: 'User Authentication.'
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v1/register
    metadata:
      groupName: 'User Authentication.'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'User Registrations.'
      description: |-
        To operate CRUD operation, you have to register your identity first.
        * This endpoint lets you create a user.
        <aside class="notice">
             You have to fill the following parameters:
               name,
               email,
               password,
        </aside>
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: et
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: gisselle.fahey@example.com
        type: string
        custom: []
      password:
        name: password
        description: 'Must be at least 6 characters.'
        required: true
        example: 'i?yXNmA_w@-x86}o'
        type: string
        custom: []
    cleanBodyParameters:
      name: et
      email: gisselle.fahey@example.com
      password: 'i?yXNmA_w@-x86}o'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/login
    metadata:
      groupName: 'User Authentication.'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'User Login.'
      description: |-
        To operate create, update, delete operation for movies.
        You have to login first.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: collins.rosie@example.net
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: aut
        type: string
        custom: []
    cleanBodyParameters:
      email: collins.rosie@example.net
      password: aut
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
